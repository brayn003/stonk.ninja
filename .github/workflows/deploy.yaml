name: Deploy

on:
  workflow_call:

jobs:
  deploy-via-pulumi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        run: |
          echo "version_client=$(jq -r '.client' .release-please-manifest.json)" >> "$GITHUB_ENV"
          echo "version_server=$(jq -r '.server' .release-please-manifest.json)" >> "$GITHUB_ENV"
          echo "version_tick_workers=$(jq -r '."tick-workers"' .release-please-manifest.json)" >> "$GITHUB_ENV"
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        working-directory: pulumi
        run: pnpm install
      - name: Set kubernetes config
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Pulumi up
        uses: pulumi/actions@v5
        with:
          command: update
          stack-name: prod
          work-dir: pulumi/apps
          config-map: |
            version_server:
              value: ${{ env.version_server }}
            version_client:
              value: ${{ env.version_client }}
            version_tick_workers:
              value: ${{ env.version_tick_workers }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

